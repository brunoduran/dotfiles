# vim: ft=cfg
#
# This is the configuration file of "rifle", ranger's file executor/opener.
# Each line consists of conditions and a command.  For each line the conditions
# are checked and if they are met, the respective command is run.
#
# Syntax:
#   <condition1> , <condition2> , ... = command
#
# The command can contain these environment variables:
#   $1-$9 | The n-th selected file
#   $@    | All selected files
#
# If you use the special command "ask", rifle will ask you what program to run.
#
# Prefixing a condition with "!" will negate its result.
# These conditions are currently supported:
#   match <regexp> | The regexp matches $1
#   ext <regexp>   | The regexp matches the extension of $1
#   mime <regexp>  | The regexp matches the mime type of $1
#   name <regexp>  | The regexp matches the basename of $1
#   path <regexp>  | The regexp matches the absolute path of $1
#   has <program>  | The program is installed (i.e. located in $PATH)
#   file           | $1 is a file
#   directory      | $1 is a directory
#   number <n>     | change the number of this command to n
#   terminal       | stdin, stderr and stdout are connected to a terminal
#   X              | $DISPLAY is not empty (i.e. Xorg runs)
#
# There are also pseudo-conditions which have a "side effect":
#   flag <flags>  | Change how the program is run. See below.
#   label <label> | Assign a label or name to the command so it can
#                 | be started with :open_with <label> in ranger
#                 | or `rifle -p <label>` in the standalone executable.
#   else          | Always true.
#
# Flags are single characters which slightly transform the command:
#   f | Fork the program, make it run in the background.
#     |   New command = setsid $command >& /dev/null &
#   r | Execute the command with root permissions
#     |   New command = sudo $command
#   t | Run the program in a new terminal.  If $TERMCMD is not defined,
#     | rifle will attempt to extract it from $TERM.
#     |   New command = $TERMCMD -e $command
# Note: The "New command" serves only as an illustration, the exact
# implementation may differ.
# Note: When using rifle in ranger, there is an additional flag "c" for
# only running the current file even if you have marked multiple files.

#####
# X #
#####

# Documents
X, has zathura, flag f, ext pdf|ps|djvu|epub = zathura -- "$@"
X, has pdftotext, flag t, ext pdf = pdftotext -- "$@" - | "$PAGER"
X, has ps2ascii, flag t, ext ps = ps2ascii -- "$@" - | "$PAGER"
X, has epub2txt, flag t, ext epub = epub2txt -- "$@" | "$PAGER"
# Video/Audio
X, has mpv, flag f, mime ^video|audio|realmedia$ = mpv -- "$@"
X, has vlc, flag f, mime ^video|audio|realmedia$ = vlc -- "$@"
# Images
X, has sxiv, flag f, mime ^image = sxiv -- "$@"
X, has feh, flag f, mime ^image = feh -- "$@"
X, label editor, has gimp, flag f, mime ^image = gimp -- "$@"
X, label editor, has gimp, flag f, ext xcf = gimp -- "$@"
# Archives
X, has als, flag t, ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz = als -- "$@" | "$PAGER"
X, has als, flag t, ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip = als -- "$@" | "$PAGER"
X, has tar, flag t, ext tar|gz = tar vvtf "$@" | "$PAGER"
X, has unzip, flag t, ext zip = unzip -l "$@" '*' | "$PAGER"
# Text
# TODO: Double check Firefox (check if add tab), w3m (xhtml), Browsh, Lynx
# TODO 
X, has firefox, flag f, ext x?html? = firefox -- "$@"
X, has qutebrowser, flag f, ext x?html? = qutescript open_url_in_instance.sh -- "$@"
X, has w3m, flag t, ext x?html? = w3m "$@"
X, ext 1, has man, flag t = man "$1"
X, has bat, flag t, mime ^text|xml$|javascript$|x-tex$|vnd.novadig.EXT = bat --paging always -- "$@"
X, has less, flag t, mime ^text|xml$|javascript$|x-tex$|vnd.novadig.EXT = less -- "$@"
X, label editor, ext [ct]sv, has vd, flag t = vd -- "$1"
X, has vim, label editor, flag t, mime ^text|xml$|javascript$|x-tex$|vnd.novadig.EXT = vim -- "$@"
# Office
X, has libreoffice, ext od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric = libreoffice "$@"

# Anything goes
# TODO: Choose with Rofi X, has rofi, flag f  = echo "$PATH" | tr : '\n' | xargs -I{} find {} -printf '%f\n' | rofi -dmenu | xargs "$@"
X = false


# TODO:
# Terminal
# Framebuffer
mime ^image, has fbi, terminal, label framebuffer = fbi -- "$@"
ext pdf, has fbpdf, terminal, label framebuffer = fbpdf -- "$@"
ext ps,  has fbgs,  terminal, label framebuffer = fbps -- "$@"
mime ^video|audio|realmedia$, has mpv, terminal, label framebuffer = mpv --vo=drm -- "$@"

#file,                 label editor = ask
#directory, has vidir, label editor = find -- "$@" -type d -exec vidir {} +
# Audio without X
# mime ^audio|ogg$, terminal, has mpv  = mpv -- "$@"
# mime ^audio|ogg$, terminal, has nvlc = nvlc -- "$@"
# ext midi?,        terminal, has wildmidi = wildmidi -- "$@"
# mime ^audio|ogg$, terminal, has mpv  = mpv --shuffle -- "$@"
#ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,  has aunpack = aunpack -- "$@"
#ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has aunpack = aunpack -- "$@"
# Linters
#file, has aspell, label linter = aspell --dont-backup --mode=comment check "$@"
#ext md,   has aspell,     label linter = aspell --dont-backup --mode=md   check "$@"
#ext tex,  has aspell,     label linter = aspell --dont-backup --mode=tex  check "$@"
#ext txt,  has aspell,     label linter = aspell --dont-backup --mode=url  check "$@"
#ext html, has aspell,     label linter = aspell --dont-backup --mode=html check "$@"
#ext [Rr], has lintr,      label linter = lintr -- "$@"
# ext py,   has pylint,     label linter = pylint  -- "$@"
# ext sh,   has shellcheck, label linter = shellcheck  -- "$@"
# ext json, has jsonlint,   label linter = jsonlint  -- "$@"
# ext json, has python,     label linter = python -m json.tool  -- "$@"
