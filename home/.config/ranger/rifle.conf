# vim: ft=cfg
#
# This is the configuration file of "rifle", ranger's file executor/opener.
# Each line consists of conditions and a command.  For each line the conditions
# are checked and if they are met, the respective command is run.
#
# Syntax:
#   <condition1> , <condition2> , ... = command
#
# The command can contain these environment variables:
#   $1-$9 | The n-th selected file
#   $@    | All selected files
#
# If you use the special command "ask", rifle will ask you what program to run.
#
# Prefixing a condition with "!" will negate its result.
# These conditions are currently supported:
#   match <regexp> | The regexp matches $1
#   ext <regexp>   | The regexp matches the extension of $1
#   mime <regexp>  | The regexp matches the mime type of $1
#   name <regexp>  | The regexp matches the basename of $1
#   path <regexp>  | The regexp matches the absolute path of $1
#   has <program>  | The program is installed (i.e. located in $PATH)
#   file           | $1 is a file
#   directory      | $1 is a directory
#   number <n>     | change the number of this command to n
#   terminal       | stdin, stderr and stdout are connected to a terminal
#   X              | $DISPLAY is not empty (i.e. Xorg runs)
#
# There are also pseudo-conditions which have a "side effect":
#   flag <flags>  | Change how the program is run. See below.
#   label <label> | Assign a label or name to the command so it can
#                 | be started with :open_with <label> in ranger
#                 | or `rifle -p <label>` in the standalone executable.
#   else          | Always true.
#
# Flags are single characters which slightly transform the command:
#   f | Fork the program, make it run in the background.
#     |   New command = setsid $command >& /dev/null &
#   r | Execute the command with root permissions
#     |   New command = sudo $command
#   t | Run the program in a new terminal.  If $TERMCMD is not defined,
#     | rifle will attempt to extract it from $TERM.
#     |   New command = $TERMCMD -e $command
# Note: The "New command" serves only as an illustration, the exact
# implementation may differ.
# Note: When using rifle in ranger, there is an additional flag "c" for
# only running the current file even if you have marked multiple files.

# Documents

ext pdf|ps|djvu|epub, has zathura,  X, flag f = zathura -- "$@"
ext pdf|ps|mobi,      has okular,   X, flag f = okular -- "$@"
ext pdf|ps|djvu,      has evince,   X, flag f = evince -- "$@"
ext epub,             has epub2txt,  terminal = epub2txt -- "$@" | "$PAGER"
ext pdf,              has pdftotext, terminal = pdftotext -- "$@" - | "$PAGER"
ext ps,               has ps2ascii,  terminal = ps2ascii -- "$@" - | "$PAGER"
ext epub|mobi,        has epub-viewer, X, flag f = calibre -- "$@"

# Audio without X

mime ^audio|ogg$, terminal, has mpv  = mpv -- "$@"
mime ^audio|ogg$, terminal, has nvlc = nvlc -- "$@"
ext midi?,        terminal, has wildmidi = wildmidi -- "$@"
mime ^audio|ogg$, terminal, has mpv  = mpv --shuffle -- "$@"

# Video/Audio with a GUI

mime ^video|audio|realmedia$, has mpv,      X, flag f = mpv -- "$@"
mime ^video|audio|realmedia$, has mpv,      X, flag f = mpv --shuffle -- "$@"
mime ^video|audio|realmedia$, has vlc,      X, flag f = vlc -- "$@"

# Images

mime ^image, has sxiv, X, flag f = sxiv -- "$@"
mime ^image, has feh,  X, flag f = feh -- "$@"

mime ^image, label editor, has gimp, X, flag f = gimp -- "$@"
ext xcf,     label editor, has gimp, X, flag f = gimp -- "$@"

# Archives

ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,  has als     = als -- "$@" | "$PAGER"
ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has als     = als -- "$@" | "$PAGER"
ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,  has aunpack = aunpack -- "$@"
ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has aunpack = aunpack -- "$@"
ext tar|gz, has tar = tar vvtf "$@" | "$PAGER"
ext zip, has unzip = unzip -l "$@" '*' | "$PAGER"

# Webpages

ext x?html?, has qutebrowser, X, flag f = qutescript open_url_in_instance.sh -- "$@"
ext x?html?, has firefox,     X, flag f = firefox -- "$@"
ext x?html?, has chromium,    X, flag f = chromium -- "$@"
ext x?html?, has w3m,          terminal = w3m "$@"
ext x?html?, has lynx,         terminal = lynx -- "$@"

# Other special kind of text

ext 1 = man "$1"
ext [ct]sv, label editor, has vd  = vd -- "$@"
ext [Rr]?md,              has mdv = mdv --- "$@" | "$PAGER" -R 

# Normal text

mime ^text|xml$|javascript$|x-tex$|vnd.novadig.EXT, has bat      = bat --paging always "$@"
mime ^text|xml$|javascript$|x-tex$|vnd.novadig.EXT               = "$PAGER" -- "$@" 
mime ^text|xml$|javascript$|x-tex$|vnd.novadig.EXT, label editor = "$VISUAL" -- "$@" 

# Microsoft

ext od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has libreoffice, X, label editor, flag f = libreoffice "$@"

# Anything goes

file,                 label editor = ask
directory, has vidir, label editor = find -- "$@" -type d -exec vidir {} +

# Everything is opening with nano (really editor command)  by default (E and bulkrename) or if uninstalled mcedit
# And it messing with man, vd and html pages...
# No matter is env VISUAL=vim
# It seems to be a bug
# Related to sudo update-alternatives â€“config editor


# Framebuffer

mime ^image, has fbi, terminal, label framebuffer = fbi -- "$@"

ext pdf, has fbpdf, terminal, label framebuffer = fbpdf -- "$@"
ext ps,  has fbgs,  terminal, label framebuffer = fbps -- "$@"

mime ^video|audio|realmedia$, has mpv, terminal, label framebuffer = mpv --vo=drm -- "$@"


# Linters
ext md,   has aspell,     label linter = aspell --dont-backup --mode=md   check "$@"
ext tex,  has aspell,     label linter = aspell --dont-backup --mode=tex  check "$@"
ext txt,  has aspell,     label linter = aspell --dont-backup --mode=url  check "$@"
ext html, has aspell,     label linter = aspell --dont-backup --mode=html check "$@"
ext [Rr], has lintr,      label linter = lintr -- "$@"
ext py,   has pylint,     label linter = pylint  -- "$@"
ext sh,   has shellcheck, label linter = shellcheck  -- "$@"
ext json, has jsonlint,   label linter = jsonlint  -- "$@"
ext json, has python,     label linter = python -m json.tool  -- "$@"

file, has aspell, label linter = aspell --dont-backup --mode=comment check "$@"


# Extractors
name ^.+.tar.bz2$, has tar, label extractor = tar xjf "$@"
name ^.+.tar.gz$,  has tar, label extractor = tar xzf "$@"   
name ^.+.tar.xz$,  has tar, label extractor = tar xJf "$@"   

ext bz2,     has bunzip2,    label extractor = bunzip2 "$@"   
ext rar,     has unrar,      label extractor = unrar x "$@"   
ext gz,      has gunzip,     label extractor = gunzip "$@"    
ext xz,      has unxz,       label extractor = unxz "$@"    
ext tar,     has tar,        label extractor = tar xf "$@"    
ext tbz2,    has tar,        label extractor = tar xjf "$@"   
ext tgz,     has tar,        label extractor = tar xzf "$@"   
ext zip,     has unzip,      label extractor = unzip "$@"     
ext Z,       has uncompress, label extractor = uncompress "$@"
ext 7z,      has 7z,         label extractor = 7z x "$@"      

# Compressors
has tar, label compressor = tar cJf archive.tar.xz "$@"   
has tar, label compressor = tar czf archive.tar.bz "$@"   
has zip, label compressor = zip archive.zip "$@"   
